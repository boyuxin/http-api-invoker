<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- 管控台日志打印，发布生产需注释 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder charset="utf-8"> <!-- encoder 可以指定字符集，对于中文输出有意义 -->
            <!-- %.-1level 只显示信息级别的首字母,%-5level 左对齐显示信息级别全称 -->
            <!-- 如需自定义关键字，用 %mdc{键名} 表示,程序中用MDC.put("键名","键值")设置，可动态设置 [%logger:%line]-->
            <Pattern>[%date] [%-5level][%c{40} %line][%t] traceLogid:[%mdc{traceId}] call:[%c{1}][%method] %msg%n</Pattern>
        </encoder>
    </appender>

    <!-- 系统日志打印 -->
    <appender name="logfile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${logger.logback.logpath}im-core.log</File>
        <encoder>
            <Pattern>[%date] [%-5level][%c{40} %line][%t] traceLogid:[%mdc{traceId}] call:[%c{1}][%method] %msg%n</Pattern>
            <charset>UTF-8</charset>
            <immediateFlush>false</immediateFlush>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logger.logback.logpath}im-core.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>512MB</maxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!-- ERROR 输出配置 -->
    <appender name="logErrorFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${logger.logback.logpath}im-core-error.log</File>
        <encoder>
            <Pattern>[%date] [%-5level][%c{40} %line][%t] traceLogid:[%mdc{traceId}] dstTraceId:[%X{dstTraceId}] call:[%c{1}][%method] %msg%n</Pattern>
            <charset>UTF-8</charset>
            <immediateFlush>false</immediateFlush>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logger.logback.logpath}im-core-error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>512MB</maxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold >0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>2048</queueSize>
        <includeCallerData>true</includeCallerData>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref ="logfile"/>
    </appender>

    <appender name="ASYNCERROR" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold >0</discardingThreshold>
        <queueSize>2048</queueSize>
        <includeCallerData>true</includeCallerData>
        <appender-ref ref ="logErrorFile"/>
    </appender>

    <!-- digest 输出配置 -->
    <appender name="logDigestFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${logger.logback.logpath}im-core-digest.log</File>
        <encoder>
            <Pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}][%X{dstTraceId}] %msg%n</Pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logger.logback.logpath}im-core-digest-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>90</maxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>512MB</maxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!-- 外部jar包 日志级别设置 -->
    <logger level="${logger.outside.logLevel}" name="com.ibatis" />
    <logger level="${logger.outside.logLevel}" name="java.sql"/>


    <!-- 输出到文件，可定义更多的 Appender -->
    <root level="INFO" >
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="ASYNC"/>
        <appender-ref ref="ASYNCERROR"/>
    </root>

</configuration>